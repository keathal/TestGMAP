//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestGMAP.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Position", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class T_Position : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceReference1.T_MarkerType T_MarkerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceReference1.T_TechUnit T_TechUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_markerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_positionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_techUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double latitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double longtitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.T_MarkerType T_MarkerType {
            get {
                return this.T_MarkerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.T_MarkerTypeField, value) != true)) {
                    this.T_MarkerTypeField = value;
                    this.RaisePropertyChanged("T_MarkerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.T_TechUnit T_TechUnit {
            get {
                return this.T_TechUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.T_TechUnitField, value) != true)) {
                    this.T_TechUnitField = value;
                    this.RaisePropertyChanged("T_TechUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_markerType {
            get {
                return this.id_markerTypeField;
            }
            set {
                if ((this.id_markerTypeField.Equals(value) != true)) {
                    this.id_markerTypeField = value;
                    this.RaisePropertyChanged("id_markerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_position {
            get {
                return this.id_positionField;
            }
            set {
                if ((this.id_positionField.Equals(value) != true)) {
                    this.id_positionField = value;
                    this.RaisePropertyChanged("id_position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_techUnit {
            get {
                return this.id_techUnitField;
            }
            set {
                if ((this.id_techUnitField.Equals(value) != true)) {
                    this.id_techUnitField = value;
                    this.RaisePropertyChanged("id_techUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                if ((this.latitudeField.Equals(value) != true)) {
                    this.latitudeField = value;
                    this.RaisePropertyChanged("latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double longtitude {
            get {
                return this.longtitudeField;
            }
            set {
                if ((this.longtitudeField.Equals(value) != true)) {
                    this.longtitudeField = value;
                    this.RaisePropertyChanged("longtitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_MarkerType", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class T_MarkerType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceReference1.T_Position[] T_PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string colorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_markerTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.T_Position[] T_Position {
            get {
                return this.T_PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.T_PositionField, value) != true)) {
                    this.T_PositionField = value;
                    this.RaisePropertyChanged("T_Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string color {
            get {
                return this.colorField;
            }
            set {
                if ((object.ReferenceEquals(this.colorField, value) != true)) {
                    this.colorField = value;
                    this.RaisePropertyChanged("color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_markerType {
            get {
                return this.id_markerTypeField;
            }
            set {
                if ((this.id_markerTypeField.Equals(value) != true)) {
                    this.id_markerTypeField = value;
                    this.RaisePropertyChanged("id_markerType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_TechUnit", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class T_TechUnit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceReference1.T_Position[] T_PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_techUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.T_Position[] T_Position {
            get {
                return this.T_PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.T_PositionField, value) != true)) {
                    this.T_PositionField = value;
                    this.RaisePropertyChanged("T_Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_techUnit {
            get {
                return this.id_techUnitField;
            }
            set {
                if ((this.id_techUnitField.Equals(value) != true)) {
                    this.id_techUnitField = value;
                    this.RaisePropertyChanged("id_techUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllPositions", ReplyAction="http://tempuri.org/IService1/getAllPositionsResponse")]
        ServiceReference1.T_Position[] getAllPositions();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getAllPositions", ReplyAction="http://tempuri.org/IService1/getAllPositionsResponse")]
        System.IAsyncResult BegingetAllPositions(System.AsyncCallback callback, object asyncState);
        
        ServiceReference1.T_Position[] EndgetAllPositions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editPosition", ReplyAction="http://tempuri.org/IService1/editPositionResponse")]
        bool editPosition(int id, float latitude, float longtitude);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/editPosition", ReplyAction="http://tempuri.org/IService1/editPositionResponse")]
        System.IAsyncResult BegineditPosition(int id, float latitude, float longtitude, System.AsyncCallback callback, object asyncState);
        
        bool EndeditPosition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addRandomPosition", ReplyAction="http://tempuri.org/IService1/addRandomPositionResponse")]
        bool addRandomPosition(float minLat, float minLong, float maxLat, float maxLong);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/addRandomPosition", ReplyAction="http://tempuri.org/IService1/addRandomPositionResponse")]
        System.IAsyncResult BeginaddRandomPosition(float minLat, float minLong, float maxLat, float maxLong, System.AsyncCallback callback, object asyncState);
        
        bool EndaddRandomPosition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/changeMarkerColor", ReplyAction="http://tempuri.org/IService1/changeMarkerColorResponse")]
        bool changeMarkerColor(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/changeMarkerColor", ReplyAction="http://tempuri.org/IService1/changeMarkerColorResponse")]
        System.IAsyncResult BeginchangeMarkerColor(int id, System.AsyncCallback callback, object asyncState);
        
        bool EndchangeMarkerColor(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAllPositionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAllPositionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ServiceReference1.T_Position[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ServiceReference1.T_Position[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class editPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public editPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addRandomPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addRandomPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class changeMarkerColorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public changeMarkerColorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ServiceReference1.IService1>, ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBegingetAllPositionsDelegate;
        
        private EndOperationDelegate onEndgetAllPositionsDelegate;
        
        private System.Threading.SendOrPostCallback ongetAllPositionsCompletedDelegate;
        
        private BeginOperationDelegate onBegineditPositionDelegate;
        
        private EndOperationDelegate onEndeditPositionDelegate;
        
        private System.Threading.SendOrPostCallback oneditPositionCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddRandomPositionDelegate;
        
        private EndOperationDelegate onEndaddRandomPositionDelegate;
        
        private System.Threading.SendOrPostCallback onaddRandomPositionCompletedDelegate;
        
        private BeginOperationDelegate onBeginchangeMarkerColorDelegate;
        
        private EndOperationDelegate onEndchangeMarkerColorDelegate;
        
        private System.Threading.SendOrPostCallback onchangeMarkerColorCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<getAllPositionsCompletedEventArgs> getAllPositionsCompleted;
        
        public event System.EventHandler<editPositionCompletedEventArgs> editPositionCompleted;
        
        public event System.EventHandler<addRandomPositionCompletedEventArgs> addRandomPositionCompleted;
        
        public event System.EventHandler<changeMarkerColorCompletedEventArgs> changeMarkerColorCompleted;
        
        public ServiceReference1.T_Position[] getAllPositions() {
            return base.Channel.getAllPositions();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetAllPositions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAllPositions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ServiceReference1.T_Position[] EndgetAllPositions(System.IAsyncResult result) {
            return base.Channel.EndgetAllPositions(result);
        }
        
        private System.IAsyncResult OnBegingetAllPositions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetAllPositions(callback, asyncState);
        }
        
        private object[] OnEndgetAllPositions(System.IAsyncResult result) {
            ServiceReference1.T_Position[] retVal = this.EndgetAllPositions(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAllPositionsCompleted(object state) {
            if ((this.getAllPositionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAllPositionsCompleted(this, new getAllPositionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAllPositionsAsync() {
            this.getAllPositionsAsync(null);
        }
        
        public void getAllPositionsAsync(object userState) {
            if ((this.onBegingetAllPositionsDelegate == null)) {
                this.onBegingetAllPositionsDelegate = new BeginOperationDelegate(this.OnBegingetAllPositions);
            }
            if ((this.onEndgetAllPositionsDelegate == null)) {
                this.onEndgetAllPositionsDelegate = new EndOperationDelegate(this.OnEndgetAllPositions);
            }
            if ((this.ongetAllPositionsCompletedDelegate == null)) {
                this.ongetAllPositionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAllPositionsCompleted);
            }
            base.InvokeAsync(this.onBegingetAllPositionsDelegate, null, this.onEndgetAllPositionsDelegate, this.ongetAllPositionsCompletedDelegate, userState);
        }
        
        public bool editPosition(int id, float latitude, float longtitude) {
            return base.Channel.editPosition(id, latitude, longtitude);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegineditPosition(int id, float latitude, float longtitude, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegineditPosition(id, latitude, longtitude, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndeditPosition(System.IAsyncResult result) {
            return base.Channel.EndeditPosition(result);
        }
        
        private System.IAsyncResult OnBegineditPosition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            float latitude = ((float)(inValues[1]));
            float longtitude = ((float)(inValues[2]));
            return this.BegineditPosition(id, latitude, longtitude, callback, asyncState);
        }
        
        private object[] OnEndeditPosition(System.IAsyncResult result) {
            bool retVal = this.EndeditPosition(result);
            return new object[] {
                    retVal};
        }
        
        private void OneditPositionCompleted(object state) {
            if ((this.editPositionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.editPositionCompleted(this, new editPositionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void editPositionAsync(int id, float latitude, float longtitude) {
            this.editPositionAsync(id, latitude, longtitude, null);
        }
        
        public void editPositionAsync(int id, float latitude, float longtitude, object userState) {
            if ((this.onBegineditPositionDelegate == null)) {
                this.onBegineditPositionDelegate = new BeginOperationDelegate(this.OnBegineditPosition);
            }
            if ((this.onEndeditPositionDelegate == null)) {
                this.onEndeditPositionDelegate = new EndOperationDelegate(this.OnEndeditPosition);
            }
            if ((this.oneditPositionCompletedDelegate == null)) {
                this.oneditPositionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OneditPositionCompleted);
            }
            base.InvokeAsync(this.onBegineditPositionDelegate, new object[] {
                        id,
                        latitude,
                        longtitude}, this.onEndeditPositionDelegate, this.oneditPositionCompletedDelegate, userState);
        }
        
        public bool addRandomPosition(float minLat, float minLong, float maxLat, float maxLong) {
            return base.Channel.addRandomPosition(minLat, minLong, maxLat, maxLong);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddRandomPosition(float minLat, float minLong, float maxLat, float maxLong, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddRandomPosition(minLat, minLong, maxLat, maxLong, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndaddRandomPosition(System.IAsyncResult result) {
            return base.Channel.EndaddRandomPosition(result);
        }
        
        private System.IAsyncResult OnBeginaddRandomPosition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            float minLat = ((float)(inValues[0]));
            float minLong = ((float)(inValues[1]));
            float maxLat = ((float)(inValues[2]));
            float maxLong = ((float)(inValues[3]));
            return this.BeginaddRandomPosition(minLat, minLong, maxLat, maxLong, callback, asyncState);
        }
        
        private object[] OnEndaddRandomPosition(System.IAsyncResult result) {
            bool retVal = this.EndaddRandomPosition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddRandomPositionCompleted(object state) {
            if ((this.addRandomPositionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addRandomPositionCompleted(this, new addRandomPositionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addRandomPositionAsync(float minLat, float minLong, float maxLat, float maxLong) {
            this.addRandomPositionAsync(minLat, minLong, maxLat, maxLong, null);
        }
        
        public void addRandomPositionAsync(float minLat, float minLong, float maxLat, float maxLong, object userState) {
            if ((this.onBeginaddRandomPositionDelegate == null)) {
                this.onBeginaddRandomPositionDelegate = new BeginOperationDelegate(this.OnBeginaddRandomPosition);
            }
            if ((this.onEndaddRandomPositionDelegate == null)) {
                this.onEndaddRandomPositionDelegate = new EndOperationDelegate(this.OnEndaddRandomPosition);
            }
            if ((this.onaddRandomPositionCompletedDelegate == null)) {
                this.onaddRandomPositionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddRandomPositionCompleted);
            }
            base.InvokeAsync(this.onBeginaddRandomPositionDelegate, new object[] {
                        minLat,
                        minLong,
                        maxLat,
                        maxLong}, this.onEndaddRandomPositionDelegate, this.onaddRandomPositionCompletedDelegate, userState);
        }
        
        public bool changeMarkerColor(int id) {
            return base.Channel.changeMarkerColor(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginchangeMarkerColor(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginchangeMarkerColor(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndchangeMarkerColor(System.IAsyncResult result) {
            return base.Channel.EndchangeMarkerColor(result);
        }
        
        private System.IAsyncResult OnBeginchangeMarkerColor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BeginchangeMarkerColor(id, callback, asyncState);
        }
        
        private object[] OnEndchangeMarkerColor(System.IAsyncResult result) {
            bool retVal = this.EndchangeMarkerColor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnchangeMarkerColorCompleted(object state) {
            if ((this.changeMarkerColorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.changeMarkerColorCompleted(this, new changeMarkerColorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void changeMarkerColorAsync(int id) {
            this.changeMarkerColorAsync(id, null);
        }
        
        public void changeMarkerColorAsync(int id, object userState) {
            if ((this.onBeginchangeMarkerColorDelegate == null)) {
                this.onBeginchangeMarkerColorDelegate = new BeginOperationDelegate(this.OnBeginchangeMarkerColor);
            }
            if ((this.onEndchangeMarkerColorDelegate == null)) {
                this.onEndchangeMarkerColorDelegate = new EndOperationDelegate(this.OnEndchangeMarkerColor);
            }
            if ((this.onchangeMarkerColorCompletedDelegate == null)) {
                this.onchangeMarkerColorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnchangeMarkerColorCompleted);
            }
            base.InvokeAsync(this.onBeginchangeMarkerColorDelegate, new object[] {
                        id}, this.onEndchangeMarkerColorDelegate, this.onchangeMarkerColorCompletedDelegate, userState);
        }
    }
}
